<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


	<context:property-placeholder location="classpath:resources/databasedetails.properties" order="1" ignore-unresolvable="true"/>
	<context:property-placeholder location ="classpath:resources/timeslot.properties" order="2" ignore-unresolvable="true"/>

	<context:component-scan base-package="com.java.orders" />


	<!-- <util:properties id="timeslots"
		location="classpath:resources/timeslot.properties" /> -->

	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />

  <mvc:annotation-driven /> 
 
	
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="jspViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<beans:bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<beans:property name="driverClassName" value="${database.driver}" />
		<beans:property name="url" value="${database.url}" />
		<beans:property name="username" value="tinka" />
		<beans:property name="password" value="tinka" />
	</beans:bean>

	<beans:bean
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		id="sessionFactory">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.java.orders.model.Orders</beans:value>
				<beans:value>com.java.orders.model.Items</beans:value>
				<beans:value>com.java.orders.model.BookingDetails</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}  </beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		id="hibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean> 

</beans:beans>